# coding: utf-8
# Module by ChatGPT
from .. import loader, utils

class MessageDeleterMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    strings = {
        "name": "MessageDeleter",
        "deleted": "‚ùå –£–¥–∞–ª–µ–Ω–æ {} —Å–æ–æ–±—â–µ–Ω–∏–π.",
        "invalid_arg": "üö´ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.",
    }

    async def delmsgcmd(self, message):
        """
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .delmsg <–∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π>
        –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
        """
        args = utils.get_args_raw(message)
        if not args or not args.isdigit():
            await utils.answer(message, self.strings("invalid_arg"))
            return

        count = int(args)
        if count < 1:
            await utils.answer(message, self.strings("invalid_arg"))
            return

        deleted = 0
        async for msg in message.client.iter_messages(
            message.chat_id, from_user="me", limit=count
        ):
            await msg.delete()
            deleted += 1

        await utils.answer(message, self.strings("deleted").format(deleted))